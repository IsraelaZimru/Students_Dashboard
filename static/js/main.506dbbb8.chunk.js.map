{"version":3,"sources":["reportWebVitals.js","studentLogin/UI/dashboard/ListStudents.js","studentLogin/UI/dashboard/InformationCard.js","studentLogin/UI/dashboard/Form.js","studentLogin/UI/dashboard/Modal.js","studentLogin/DAL/api.js","studentLogin/UI/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ListStudents","onRevealedCard","local","Table","bordered","className","map","student","i","onClick","username","course","InformationCard","Container","Row","Col","xs","Button","id","src","pic","alt","Object","entries","key","value","style","display","StudentForm","onCreatingStudent","localStudents","setLocalStudents","useState","validated","setValidated","isRequired","pattern","msg","isInVaild","email","address","gender","details","setDetails","validation","name","errorMsg","isMsgShowing","push","test","prevDetails","Form","noValidate","onSubmit","event","checkErrors","hasOwnProperty","call","preventDefault","stopPropagation","alert","Group","as","Label","InputGroup","hasValidation","Prepend","Text","icon","faUser","Control","onBlur","e","target","onChange","type","isInvalid","placeholder","required","Feedback","faMapMarkedAlt","rows","aria-describedby","md","faGraduationCap","ButtonGroup","variant","length","ModalMsg","show","setShow","Modal","onHide","Header","closeButton","Title","Body","Footer","students","grade","initialLst","JSON","parse","localStorage","getItem","creatingStudent","rnd","Math","floor","random","obj","callback","getter","newLst","setItem","stringify","addStudent","whichPic","choosePicByGender","App","selectedSudent","setSelectedSudent","revealedCard","user","Navbar","bg","sticky","Brand","temp","sort","a","b","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.506dbbb8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Table } from 'react-bootstrap';\r\n\r\nfunction ListStudents({ onRevealedCard, local }) {\r\n\r\n    return <Table bordered className=\"text-light\">\r\n        <thead>\r\n            <tr>\r\n                <th>Student Username:</th>\r\n                <th>Course:</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {local.map((student, i) => <tr key={i} onClick={() => onRevealedCard(student)} className=\"rowStyle\">\r\n                <td>{student.username}</td>\r\n                <td>{student.course}</td>\r\n            </tr>)}\r\n        </tbody>\r\n    </Table>\r\n}\r\n\r\nexport default ListStudents","import { Button, Row, Container, Col } from 'react-bootstrap'\r\n\r\nconst InformationCard = ({ student, onRevealedCard }) => {\r\n\r\n    return <Container className=\"p-0 m-0\">\r\n        <Row className=\" m-2 cardInfo\">\r\n            <Col xs={1}>\r\n                <Button className=\"\" id=\"extBtn\" onClick={() => onRevealedCard(null)}>X</Button>\r\n            </Col>\r\n            <Col xs={4} className=\"d-flex align-items-center\">\r\n                <img src={student.pic} alt=\"crdImg\" id=\"crdImg\" />\r\n            </Col>\r\n            <Col xs={6} className=\"text-left\">\r\n                <h2 className=\"text-center pt-2\">Additional information:</h2>\r\n                <hr className=\"hrCard\"></hr>\r\n                {Object.entries(student).map(([key, value]) => {\r\n                    return <p key={key} style={{ display: \"block\" }} >\r\n                        {(key === \"pic\") ?\r\n                            \"\" :\r\n                            `- ${key} : ${value}`}\r\n                    </p>\r\n                })}\r\n            </Col>\r\n        </Row>\r\n    </Container >\r\n}\r\n\r\nexport default InformationCard\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGraduationCap, faMapMarkedAlt, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from 'react';\r\nimport { InputGroup, Form, Button, ButtonGroup, Container, Col } from 'react-bootstrap'\r\nimport \"../style.css\"\r\n\r\n\r\nconst StudentForm = ({ onCreatingStudent, localStudents, setLocalStudents }) => {\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const [details, setDetails] = useState({\r\n        username: { isRequired: true, pattern: /^([א-ת]|\\w){2,}$/, msg: [], value: \"\", isInVaild: false },\r\n        email: { isRequired: true, pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, msg: [], value: \"\", isInVaild: false },\r\n        address: { isRequired: true, pattern: /([א-ת ]|\\w){10,}/, msg: [], value: \"\", isInVaild: false },\r\n        course: { isRequired: true, msg: [], pattern: /\\w{2,}/, value: \"\", isInVaild: false },\r\n        gender: { isRequired: true, msg: [], pattern: /\\w{2,}$/, value: \"\", isInVaild: false }\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n        const checkErrors = [];\r\n\r\n        for (const key in details) {\r\n            if (Object.hasOwnProperty.call(details, key)) {\r\n                checkErrors.push(validation({ name: key, value: details[key].value }))\r\n\r\n            }\r\n        }\r\n\r\n        for (const error of checkErrors) { //if there is error msg ->submit don't happens!\r\n            if (error) {\r\n                setValidated(false)\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n\r\n        alert(\"Student successfully added\")\r\n        setValidated(true);\r\n        onCreatingStudent(details, setLocalStudents, localStudents)\r\n    };\r\n\r\n    function validation({ name, value }) {\r\n        const errorMsg = [];\r\n        let isMsgShowing = false;\r\n        if (value === \"\") {\r\n            isMsgShowing = true\r\n            errorMsg.push(`${name} is required.`)\r\n        } else if (details[name].isRequired && (details[name].pattern).test(value)) {\r\n            isMsgShowing = false\r\n        } else {\r\n            errorMsg.push(`${name} is not valid.`)\r\n            isMsgShowing = true\r\n        }\r\n        setDetails(prevDetails => ({ ...prevDetails, [name]: { ...prevDetails[name], value, isInVaild: isMsgShowing, msg: errorMsg } }))\r\n        return errorMsg[0] //importent for sumbit form!!!\r\n    }\r\n\r\n\r\n    return <Container>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Username:</Form.Label>\r\n                    <InputGroup hasValidation>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text ><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            onBlur={e => validation(e.target)}\r\n                            onChange={(e) => validation(e.target)}\r\n                            value={details.username.value}\r\n                            type=\"text\"\r\n                            isInvalid={details.username.isInVaild}// A function that decides when a comment appears!true/false\r\n                            placeholder=\"Enter Username...\"\r\n                            required\r\n                            name=\"username\" />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {details.username.msg}\r\n                            <br></br>\r\n                            must be longer than 2 letters.\r\n                            </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} >\r\n                    <Form.Label>Email address:</Form.Label>\r\n                    <InputGroup hasValidation>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text >@</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            required\r\n                            isInvalid={details.email.isInVaild}// A function that decides when a comment appears!true/false\r\n                            onBlur={e => validation(e.target)}\r\n                            onChange={(e) => validation(e.target)}\r\n                            value={details.email.value}\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email...\"\r\n                            name=\"email\" />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {details.email.msg}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group >\r\n                <Form.Label>Address:</Form.Label>\r\n                <InputGroup hasValidation>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text > <FontAwesomeIcon icon={faMapMarkedAlt} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        isInvalid={details.address.isInVaild}//A function that decides when a comment appears!true/false\r\n                        placeholder=\"Street, Number, City, Zip...\"\r\n                        name=\"address\"\r\n                        onBlur={e => validation(e.target)}\r\n                        onChange={(e) => validation(e.target)}\r\n                        value={details.address.value}\r\n                        aria-describedby=\"inputGroupPrepend\"\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {details.address.msg}\r\n                        <br></br>\r\n                A full address must be entered - 10 chars onwards\r\n                        </Form.Control.Feedback>\r\n                </InputGroup>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Row>\r\n                <Form.Group as={Col} md=\"6\">\r\n                    <Form.Label className=\"block\">Course:</Form.Label>\r\n                    <InputGroup hasValidation>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text > <FontAwesomeIcon icon={faGraduationCap} /></InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            name=\"course\"\r\n                            isInvalid={details.course.isInVaild}// A function that decides when a comment appears!true/false\r\n                            value={details.course.value}\r\n                            onChange={(e) => validation(e.target)}\r\n                            onBlur={e => validation(e.target)}>\r\n                            <option value=\"\">Select Course...</option>\r\n                            <option value=\"Art Theory - Basis\">Art Theory - Basis</option>\r\n                            <option value=\"History of French art\">History of French art</option>\r\n                            <option value=\"Art Theory - Advanced\">Art Theory - Advanced</option>\r\n                            <option value=\"Introduction to Art Therapy\">Introduction to Art Therapy</option>\r\n                            <option value=\"Art therapy - advanced\">Art therapy - advanced</option>\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {details.course.msg}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\">\r\n                    <Form.Label className=\"block\">Gender:</Form.Label>\r\n                    <InputGroup hasValidation>\r\n                        <ButtonGroup\r\n                            isInvalid={details.gender.isInVaild}// A function that decides when a comment appears!true/false\r\n                        >\r\n                            <Button\r\n                                name=\"gender\"\r\n                                value=\"female\"\r\n                                variant=\"outline-info\"\r\n                                className={details.gender.msg.length ? \"alert-danger\" : \"\"}\r\n                                onClick={e => validation(e.target)}\r\n                            >\r\n                                Female\r\n                    </Button>\r\n                            <Button\r\n                                name=\"gender\"\r\n                                value=\"male\"\r\n                                variant=\"outline-info\"\r\n                                className={details.gender.msg.length ? \"alert-danger\" : \"\"}\r\n                                onClick={e => validation(e.target)}>\r\n                                Male\r\n                    </Button>\r\n                            <Button\r\n                                name=\"gender\"\r\n                                value=\"other\"\r\n                                variant=\"outline-info\"\r\n                                className={details.gender.msg.length ? \"alert-danger\" : \"\"}\r\n                                onClick={e => validation(e.target)}>\r\n                                Other\r\n                    </Button>\r\n                        </ButtonGroup>\r\n                        {details.gender.msg && <small id=\"genderMsg\">{details.gender.msg} </small>}\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Button type=\"submit\" variant=\"outline-dark\">Submit form</Button>\r\n        </Form>\r\n    </Container >\r\n}\r\n\r\nexport default StudentForm","import { useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport StudentForm from './Form';\r\n\r\n\r\nconst ModalMsg = ({ onCreatingStudent, localStudents, setLocalStudents }) => {\r\n    const [show, setShow] = useState(false); //setting of Modal msg\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return <>\r\n        <Button variant=\"primary\" onClick={handleShow}> Add new student </Button>\r\n        <Modal className=\"formStyle fontStlye\" show={show} onHide={handleClose} >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title > Hello Student! <br></br> <p>Please fill in your detaild</p> </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <StudentForm onCreatingStudent={onCreatingStudent} localStudents={localStudents} setLocalStudents={setLocalStudents} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default ModalMsg","\r\nconst students = [\r\n    {\r\n        pic: 'https://i.pravatar.cc/150?img=${1}', gender: \"female\", username: \"Wawa\", email: \"wawa@gmail.com\", address: \"wawa 12 Tel-Aviv 67543\", course: \"Art Theory - Basis\", grade: 79\r\n    },\r\n    {\r\n        pic: 'https://i.pravatar.cc/150?img=${2}', gender: \"male\", username: \"Lala\", email: \"lala@gmail.com\", address: \"lala 12 Natanya 67543\", course: \"Art Theory - Advanced\", grade: 91\r\n    },\r\n    {\r\n        pic: `https://randomuser.me/api/portraits/women/2.jpg`, gender: \"female\", username: \"Israela\", email: \"israela@gmail.com\", address: \"israela 12 Raanana 67543\", course: \"Art Theory - Advanced\", grade: 58\r\n    },\r\n    { pic: 'https://i.pravatar.cc/150?img=${4}', gender: \"male\", username: \"Zimru\", email: \"zimru@gmail.com\", address: \"zimru 12 Haifa 62233\", course: \"Introduction to Art Therapy\", grade: 63 }\r\n]\r\n\r\nconst initialLst = JSON.parse(localStorage.getItem(\"students\")) || students;\r\n\r\n\r\nconst addStudent = (obj, callback, getter) => {\r\n    const newLst = JSON.parse(localStorage.getItem(\"students\"));\r\n    newLst.push(obj)\r\n    localStorage.setItem(\"students\", JSON.stringify(newLst));\r\n    callback([...getter, obj])//callback-setLocalStudents, getter-localStudents-> (setLocalStudents, localStudents)\r\n}\r\n\r\n\r\nconst choosePicByGender = (gender, rnd) => {\r\n    let whichPic = \"\"\r\n    switch (gender) {\r\n        case \"male\":\r\n            whichPic = `https://randomuser.me/api/portraits/men/${rnd}.jpg`\r\n            break;\r\n        case \"female\":\r\n            whichPic = `https://randomuser.me/api/portraits/women/${rnd}.jpg`\r\n            break;\r\n        case \"other\":\r\n            whichPic = \"https://images.squarespace-cdn.com/content/v1/598b7d4c9f745655815eb80a/1558380623477-Z8JO1D1O7ACETDZ9XWTU/ke17ZwdGBToddI8pDm48kIu7ID3Q_rf864yJf87XFIh7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0h8vX1l9k24HMAg-S2AFielfUZEyfzH2cLnl2HLSR7-WVEkGoqQDaWpNaSSFYXNdhA/gender-spectrum1.jpg\"\r\n            break;\r\n        default:\r\n            whichPic = \"error\"\r\n            break;\r\n    }\r\n    return whichPic\r\n}\r\n\r\nconst creatingStudent = (details, setLocalStudents, localStudents) => { //old name - addNewStudent\r\n    const rnd = Math.floor(Math.random() * 80) + 20;\r\n    let picGender = choosePicByGender(details.gender.value, rnd)\r\n    const newPerson = {\r\n        pic: picGender,\r\n        gender: details.gender.value,\r\n        username: details.username.value,\r\n        email: details.email.value,\r\n        address: details.address.value,\r\n        course: details.course.value,\r\n        grade: rnd\r\n    }\r\n    addStudent(newPerson, setLocalStudents, localStudents)\r\n}\r\n\r\n\r\n\r\n\r\nexport { students, creatingStudent, initialLst }","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../UI/style.css'\r\nimport ListStudents from '../UI/dashboard/ListStudents.js';\r\nimport { Container, Row, Col, Button, Navbar } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport InformationCard from '../UI/dashboard/InformationCard';\r\nimport ModalMsg from '../UI/dashboard/Modal.js';\r\nimport { creatingStudent, initialLst, students } from '../DAL/api.js';\r\n\r\n\r\nfunction App() {\r\n    const [selectedSudent, setSelectedSudent] = useState(\"\")\r\n    const [localStudents, setLocalStudents] = useState(initialLst)\r\n\r\n    const revealedCard = (user) => {\r\n        setSelectedSudent(user)\r\n    }\r\n\r\n    function sortNames() {\r\n        const copyarr = [...localStudents]\r\n        const temp = copyarr.sort((a, b) => {\r\n            a = a[\"username\"].toLowerCase();\r\n            b = b[\"username\"].toLowerCase();\r\n            if (a > b) {\r\n                return 1;\r\n            }\r\n            if (a < b) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        setLocalStudents(temp)\r\n        localStorage.setItem(\"students\", JSON.stringify(temp))\r\n    }\r\n\r\n    const rebootList = () => {\r\n        localStorage.setItem(\"students\", JSON.stringify(students))\r\n        setLocalStudents(students)\r\n    }\r\n\r\n    return <div className=\"container-fuid text-center main\">\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" className=\"navStyle\">\r\n            <Navbar.Brand className=\"h1font\" > du-Louvre University </Navbar.Brand>\r\n            <section id=\"btnControl\" >\r\n                <ModalMsg onCreatingStudent={creatingStudent} localStudents={localStudents} setLocalStudents={setLocalStudents} />\r\n                <Button onClick={sortNames} className=\"maginBtn\">sort by name</Button>\r\n                <Button onClick={rebootList} className=\"maginBtn\">Reboot the list</Button>\r\n            </section>\r\n        </Navbar>\r\n        <Container>\r\n            <h1 className=\"h1Style h1font\">Faculty Dashboard:</h1>\r\n            <hr id=\"hrApp\"></hr>\r\n            <Row md=\"2\">\r\n                <Col>\r\n                    <ListStudents onRevealedCard={revealedCard} local={localStudents} />\r\n                </Col>\r\n                <Col>\r\n                    {selectedSudent && <InformationCard student={selectedSudent} onRevealedCard={revealedCard} />}\r\n                    {!selectedSudent && <div id=\"msgDefault\" className=\"h1font\"> Click on one of the students to see HERE more information</div>}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport App from './studentLogin/UI/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    < App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}